# -*- coding: utf-8 -*-
"""mp3_to_mel(mp3).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sJ1hDGWdjtKkVhRZ9juGNDO1zfIILujI
"""

import numpy as np
import librosa
import pandas as pd
import os
import yt_dlp
import demucs.separate
import pickle
import shutil
from pydub import AudioSegment
import malaya_speech
from pydub.silence import split_on_silence


mel_path = 'your_path'
music_path = 'your_path'
df = pd.read_csv("song_df.csv")

base_url = 'http://www.youtube.com/watch?v='
out_path = music_path
list_failed = []

def my_hook(d):
    if d['status'] == 'finished':
        print('Done downloading, now converting ...')

def download_audio(url, name):
    ydl_opts = {
        'format': 'bestaudio/best',
        'postprocessors': [{
            'key': 'FFmpegExtractAudio',
            'preferredcodec': 'mp3',
            'preferredquality': '320'
        }],
        'outtmpl': f'{out_path}/{name}.%(ext)s',
        'noplaylist': True,
        'progress_hooks': [my_hook]
    }

    with yt_dlp.YoutubeDL(ydl_opts) as ydl:
        try:
            ydl.download([base_url + url])
        except yt_dlp.utils.DownloadError:
            print(f"Download failed for ID: {url}")
            list_failed.append(url)

# Assume that your command is `demucs --mp3 --two-stems vocals -n mdx_extra "track with space.mp3"`
# The following codes are same as the command above:

#demucs.separate.main(["--mp3", "--two-stems", "vocals", "-n", "mdx_extra", "/content/drive/MyDrive/music/10cm.mp3"])

# # Or like this
# import demucs.separate
# import shlex
# demucs.separate.main(shlex.split('--mp3 --two-stems vocals -n mdx_extra "track with space.mp3"'))

df[:1]['url']

for index, row in df.iterrows():
    try:
      url = row['id']
      #name = f"{row['name']}_{row['song_title']}"
      name = row['name']+'_'+row['new_title'].strip()
      mp3name = (name+'.mp3').strip()

      download_audio(url, name)
      print(mp3name,' download finish')

      demucs.separate.main(["--mp3", "--two-stems", "vocals", "-n", "mdx_extra", music_path + '/' + mp3name])
      y, sr = librosa.load('/content/drive/MyDrive/demucs/separated/mdx_extra/'+ name +'/vocals.mp3', sr=16000)
      y_int = malaya_speech.astype.float_to_int(y)
      audio = AudioSegment(
          y_int.tobytes(),
          frame_rate = sr,
          sample_width = y_int.dtype.itemsize,
          channels = 1
      )
      audio_chunks = split_on_silence(
          audio,
          min_silence_len = 400,
          silence_thresh = -30,
          keep_silence = 400,
      )
      audio_chunks
      y_ = sum(audio_chunks)
      y_ = np.array(y_.get_array_of_samples())
      y_ = malaya_speech.astype.int_to_float(y_)
      if y_.shape[0] <= sr*20:
          os.remove(music_path + '/' + mp3name)
          shutil.rmtree('/content/drive/MyDrive/Audio/demucs/separated/mdx_extra/'+ name)
          continue

      spect = librosa.feature.melspectrogram(y=y_,sr=sr,n_fft=2048,hop_length=512, n_mels=128)
      mel_spect = librosa.power_to_db(S=spect, ref=np.max)

      np.save(mel_path + name ,mel_spect)
      os.remove(music_path + '/' + mp3name)
      shutil.rmtree('/content/drive/MyDrive/demucs/separated/mdx_extra/'+ name)
    except:
      continue

with open("/content/drive/MyDrive/demucs/list_failed.pkl","wb") as f:
    pickle.dump(list_failed, f)

'/content/drive/MyDrive/demucs/separated/mdx_extra/'+ name +'/vocals.mp3'